{
	/*
	 // Place your snippets for TypeScript here. Each snippet is defined under a snippet name and has a prefix, body and
	 // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	 // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	 // same ids are connected.
	 // Example:
	 "Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"console.log()": {
		"prefix": "lg",
		"body": [
			"console.log($0)"
		],
		"description": "Log output to console"
	},
	"function name(){}": {
		"prefix": "df",
		"body": "function $1($2) {\n\t$0\n}"
	},
	"async function name(){}": {
		"prefix": "adf",
		"body": "async function $1($2) {\n\t$0\n}"
	},
	"()=>{} (prefix:dff)": {
		"prefix": "dff",
		"body": "($1) => {\n\t$0\n}"
	},
	"()=>{} (prefix:=>)": {
		"prefix": "=>",
		"body": "($1) => {\n\t$0\n}"
	},
	"construcotr() {} (define a construcotr)": {
		"prefix": "dcon",
		"body": "constructor($1) {\n\t$0\n}"
	},
	"[methodName]() {} (define a method)": {
		"prefix": "dmeth",
		"body": "${1:fnName}($2) {\n\t$0\n}"
	},
	"for (let i in list) let item=list[i]": {
		"prefix": "fori",
		"body": [
			"for (let i = 0; i < ${2:arr}.length; i++) {",
			"\tconst ${1:item} = ${2}[i]",
			"\t$0",
			"}"
		],
		"description": "For i in list"
	},
	"for (let item of list)": {
		"prefix": "forof",
		"body": [
			"for (const ${1:item} of ${2:list}) {",
			"\t$0",
			"}"
		]
	},
	"for (let key in object)": {
		"prefix": "forin",
		"body": [
			"for (const ${1:key} in ${2:obj}) {",
			"\t$0",
			"}"
		]
	},
	"setTimeout(()=>{})": {
		"prefix": "settimeout:arrow",
		"body": [
			"setTimeout(() => {",
			"\t$0",
			"}, ${1:0})"
		]
	},
	"new Promise((resolve, reject)=>{})": {
		"prefix": "newp",
		"body": [
			"new Promise((resolve, reject) => {",
			"\t$0",
			"})"
		]
	},
	"public [member]": {
		"prefix": "pb",
		"body": "public "
	},
	"public async method": {
		"prefix": "pba",
		"body": "public async ${1:method}($2) {\n\t$0\n}"
	},
	"protected [member]": {
		"prefix": "pt",
		"body": "protected "
	},
	"protected async method": {
		"prefix": "pta",
		"body": "protected async ${1:method}($2) {\n\t$0\n}"
	},
	"private [member]": {
		"prefix": "pv",
		"body": "private "
	},
	"private async method": {
		"prefix": "pva",
		"body": "private async ${1:method}($2) {\n\t$0\n}"
	},
	"await": {
		"prefix": "awa",
		"body": "await"
	}
}